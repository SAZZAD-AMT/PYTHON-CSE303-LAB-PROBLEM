(()=>{"use strict";var e={747:e=>{e.exports=require("fs")},622:e=>{e.exports=require("path")},549:e=>{e.exports=require("vscode")}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,n),i.exports}var o={};(()=>{var e=o;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const t=n(747),r=n(622),i=n(549),s=[(()=>{const e=new i.CompletionItem("Configure tunnel");return e.kind=i.CompletionItemKind.Snippet,e.documentation="Insert a template for configuring a tunnel connection.",e.insertText=new i.SnippetString("Host ${1:alias}\n    HostName ${2:hostname}\n    LocalForward ${4:port} ${5:localhost}:${4:port}\n    User ${6:user}"),e})()];let a;function c(e,n){const o=e.lineAt(n).text.substr(0,n.character);if(/^\s*[^\s]*$/.test(o))return(a||(a=new Promise(((e,n)=>{t.readFile(r.join(__dirname,"../thirdparty/options.json"),{encoding:"utf8"},((t,o)=>{t?n(t):e(JSON.parse(o))}))})))).then((e=>e.map((e=>{const t=new i.CompletionItem(e.label);return t.documentation=e.documentation,t})).concat(s)))}e.activate=function(e){e.subscriptions.push(i.languages.registerCompletionItemProvider("ssh_config",{provideCompletionItems:c}," "))},e.deactivate=function(){}})();var r=exports;for(var i in o)r[i]=o[i];o.__esModule&&Object.defineProperty(r,"__esModule",{value:!0})})();
//# sourceMappingURL=extension.js.map